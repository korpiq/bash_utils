#!/bin/bash

c () { echo "$*" | bc -l; }

pdfcompress () {
    if [ -z "$2" ]
    then
        echo "Usage: $0 infile outfile [screen*|ebook|printer|prepress]" >&2
        return 1
    fi
    gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dPDFSETTINGS=/${3:-screen} -dCompatibilityLevel=1.4 -sOutputFile="$2" "$1"
}

mount_vera () {
    local NAME=${1//*\//}
    local BARENAME=$(sed 's!\.[^/.]*$!!' <<<"/share/$NAME")
    local DIR=$([ "$NAME" = "$1" ] && echo /share || dirname "$1")
    if [ -f "$1" ]
    then
        local SOURCE="$1" TARGET="$DIR/$BARENAME"
    else
        local SOURCE="$DIR/.crypts/$NAME.veracrypt" TARGET="$DIR/$NAME"
        for DIR in "$DIR/."*"/$NAME."*
        do
            [ -f "$DIR" ] && SOURCE="$DIR"
        done
    fi
    mkdir -p "$TARGET"
    sudo /usr/bin/veracrypt --text --mount --keyfiles="" --pim=0 --protect-hidden=no "$SOURCE" "$TARGET"
}

umount_vera () {
    sudo /usr/bin/veracrypt --text --dismount "$@"
}

function @ () { git rebase "${1:-origin/$(v default)}"; }
function - () { git restore --staged "$@"; }

path_uniq () { local D P; while read D; do echo ":$P:" | grep -q ":$D" || P="$P:$D"; done <<<"$(sed 's/:/\n/g' <<<"$*")"; sed 's/^://' <<<"$P"; }

idea () { nohup < /dev/null &> /dev/null intellij-idea-ultimate "$@" & }

ok () {
    CMD=$(git status | sed -ne 's/.*\(git [^ ]* --continue\).*/\1/p' | head -n 1)
    [ -n "$CMD" ] && echo $CMD && $CMD
}

nx () {
  # redirecting stdout strips color. sed removes empty lines forced by nx.
  yarn nx "$@" 2> >(sed -ne '/./p' >&2) > /dev/null
}

google-chrome-find-profile () {
  jq -r '
    .profile.info_cache | 
    to_entries | .[] | 
    select(.value.user_name | test("'"$1"'")) | .key
  ' ~/.config/google-chrome/Local\ State
}

google-chrome-open-profile () {
  local EMAIL="$1"
  shift
  google-chrome --profile-directory="$(google-chrome-find-profile "$EMAIL")" "$@"
}

alias aws-clear='unset $(env | sed -ne "s/=.*//; /^AWS/p")'

tiketti () {
  warp-cli connect
  aws-clear
  export AWS_PROFILE=tiketti
  source awsume $AWS_PROFILE
}

tiketti-development () {
  warp-cli connect
  aws-clear
  export AWS_PROFILE=tiketti-development
  google-chrome-open-profile kalle.hallivuori@tiketti.fi
  aws sso login
}

